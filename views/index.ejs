<!DOCTYPE html>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	<title>DASHBOARD Testing</title>
	<script src="/deps/webcomponentsjs/webcomponents.js"></script>
	<link rel="import" href="/deps/polymer/polymer.html" />
	<link rel="import" href="/IRIS/iris-base.html" />
	<link rel="import" href="/IRIS/iris-dashboard.html" />
	<link rel="import" href="/IRIS/iris-panel.html" />
	<script type="text/javascript" src="/IRIS/scripts/jquery-2.1.3.js"></script>
	<script type="text/javascript" src="socket.io/socket.io.js"></script>
	<style is="custom-style">
		/*html /deep/ paper-toolbar.small{
			height: 30px;
			background-color: #FAFBFC;
		}
		html /deep/ paper-toolbar.small /deep/ .toolbar-tools{
			height: 30px;
		}
		html /deep/ paper-toolbar.small /deep/ paper-icon-button{
			padding: 0px;
		}
		html /deep/ paper-toolbar.mini{
			height: 22px;
			background-color: #FAFBFC;
		}
		html /deep/ paper-toolbar.mini /deep/ .toolbar-tools{
			height: 22px;
		}
		html /deep/ paper-toolbar.mini /deep/ iron-icon-button{
			padding: 0px 5px;
		}
		html /deep/ paper-toolbar.mini>*{
			margin:0px 2px;
		}
		html /deep/ paper-toolbar.mini /deep/ iron-icon{
			height: 12px;
			width: 12px;
		}*/
		.content{height:200px; padding: 10px;}
	</style>
</head>
<body>

<div>IRIS DASHBOARD DEMO</div>
<iris-dashboard>
	<iris-dashboard-row class="horizontal layout">
		<iris-dashboard-column class="flex vertical layout">
			<iris-panel class="iris-panel" height="250" isdragable caption="D3 Chart">
				<div class="content" id="chart">
					<style>
						circle, path {cursor: pointer;}
						circle {fill: none;pointer-events: all;}
					</style>
					<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
					<script>
						///////////////////////////////////////////////////
						var margin = {top: 100, right: 480, bottom: 100, left: 480},
						    radius = 100;//Math.min(margin.top, margin.right, margin.bottom, margin.left) - 100;

						var hue = d3.scale.category10();

						var luminance = d3.scale.sqrt()
						    .domain([0, 1e6])
						    .clamp(true)
						    .range([90, 20]);

						var svg = d3.select("#chart").append("svg")
						    .attr("width", margin.left + margin.right)
						    .attr("height", margin.top + margin.bottom)
						  .append("g")
						    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

						var partition = d3.layout.partition()
						    .sort(function(a, b) { return d3.ascending(a.name, b.name); })
						    .size([2 * Math.PI, radius]);

						var arc = d3.svg.arc()
						    .startAngle(function(d) { return d.x; })
						    .endAngle(function(d) { return d.x + d.dx - .01 / (d.depth + .5); })
						    .innerRadius(function(d) { return radius / 3 * d.depth; })
						    .outerRadius(function(d) { return radius / 3 * (d.depth + 1) - 1; });

						d3.json("/flare.json", function(error, root) {

						  // Compute the initial layout on the entire tree to sum sizes.
						  // Also compute the full name and fill color for each node,
						  // and stash the children so they can be restored as we descend.
						  partition
						      .value(function(d) { return d.size; })
						      .nodes(root)
						      .forEach(function(d) {
						        d._children = d.children;
						        d.sum = d.value;
						        d.key = key(d);
						        d.fill = fill(d);
						      });

						  // Now redefine the value function to use the previously-computed sum.
						  partition
						      .children(function(d, depth) { return depth < 2 ? d._children : null; })
						      .value(function(d) { return d.sum; });

						  var center = svg.append("circle")
						      .attr("r", radius / 3)
						      .on("click", zoomOut);

						  center.append("title")
						      .text("zoom out");

						  var path = svg.selectAll("path")
						      .data(partition.nodes(root).slice(1))
						    .enter().append("path")
						      .attr("d", arc)
						      .style("fill", function(d) { return d.fill; })
						      .each(function(d) { this._current = updateArc(d); })
						      .on("click", zoomIn);

						  function zoomIn(p) {
						    if (p.depth > 1) p = p.parent;
						    if (!p.children) return;
						    zoom(p, p);
						  }

						  function zoomOut(p) {
						    if (!p.parent) return;
						    zoom(p.parent, p);
						  }

						  // Zoom to the specified new root.
						  function zoom(root, p) {
						    if (document.documentElement.__transition__) return;

						    // Rescale outside angles to match the new layout.
						    var enterArc,
						        exitArc,
						        outsideAngle = d3.scale.linear().domain([0, 2 * Math.PI]);

						    function insideArc(d) {
						      return p.key > d.key
						          ? {depth: d.depth - 1, x: 0, dx: 0} : p.key < d.key
						          ? {depth: d.depth - 1, x: 2 * Math.PI, dx: 0}
						          : {depth: 0, x: 0, dx: 2 * Math.PI};
						    }

						    function outsideArc(d) {
						      return {depth: d.depth + 1, x: outsideAngle(d.x), dx: outsideAngle(d.x + d.dx) - outsideAngle(d.x)};
						    }

						    center.datum(root);

						    // When zooming in, arcs enter from the outside and exit to the inside.
						    // Entering outside arcs start from the old layout.
						    if (root === p) enterArc = outsideArc, exitArc = insideArc, outsideAngle.range([p.x, p.x + p.dx]);

						    path = path.data(partition.nodes(root).slice(1), function(d) { return d.key; });

						    // When zooming out, arcs enter from the inside and exit to the outside.
						    // Exiting outside arcs transition to the new layout.
						    if (root !== p) enterArc = insideArc, exitArc = outsideArc, outsideAngle.range([p.x, p.x + p.dx]);

						    d3.transition().duration(d3.event.altKey ? 7500 : 750).each(function() {
						      path.exit().transition()
						          .style("fill-opacity", function(d) { return d.depth === 1 + (root === p) ? 1 : 0; })
						          .attrTween("d", function(d) { return arcTween.call(this, exitArc(d)); })
						          .remove();

						      path.enter().append("path")
						          .style("fill-opacity", function(d) { return d.depth === 2 - (root === p) ? 1 : 0; })
						          .style("fill", function(d) { return d.fill; })
						          .on("click", zoomIn)
						          .each(function(d) { this._current = enterArc(d); });

						      path.transition()
						          .style("fill-opacity", 1)
						          .attrTween("d", function(d) { return arcTween.call(this, updateArc(d)); });
						    });
						  }
						});

						function key(d) {
						  var k = [], p = d;
						  while (p.depth) k.push(p.name), p = p.parent;
						  return k.reverse().join(".");
						}

						function fill(d) {
						  var p = d;
						  while (p.depth > 1) p = p.parent;
						  var c = d3.lab(hue(p.name));
						  c.l = luminance(d.sum);
						  return c;
						}

						function arcTween(b) {
						  var i = d3.interpolate(this._current, b);
						  this._current = i(0);
						  return function(t) {
						    return arc(i(t));
						  };
						}

						function updateArc(d) {
						  return {depth: d.depth, x: d.x, dx: d.dx};
						}

						//d3.select(self.frameElement).style("height", margin.top + margin.bottom + "px");

					</script>
				</div>
			</iris-panel>
			<iris-panel class="iris-panel" caption="USER SELECTOR" isdragable>
				<div class="content">
				Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec leo turpis, lacinia in velit non, lobortis ornare nunc. Proin ut blandit magna. Etiam consequat, sapien nec pharetra accumsan, sem est dictum augue, quis mollis nunc nibh vitae sapien. In commodo, urna a hendrerit efficitur, neque nibh commodo velit, tristique vulputate lectus ligula vitae metus. Vivamus congue feugiat metus, sed aliquam odio dapibus sit amet. Ut feugiat est elit, faucibus feugiat purus malesuada at. Nulla pharetra aliquam nisi congue egestas. Praesent vestibulum egestas erat at placerat. Aenean eget nisi dictum, sodales metus in, luctus orci. Vestibulum id viverra augue. Quisque dictum elementum ex eu fermentum.
				</div>
			</iris-panel>
			<iris-panel class="iris-panel" caption="USER CREATE" isdragable>
				<div class="content">
					Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec leo turpis, lacinia in velit non, lobortis ornare nunc. Proin ut blandit magna. Etiam consequat, sapien nec pharetra accumsan, sem est dictum augue, quis mollis nunc nibh vitae sapien. In commodo, urna a hendrerit efficitur, neque nibh commodo velit, tristique vulputate lectus ligula vitae metus. Vivamus congue feugiat metus, sed aliquam odio dapibus sit amet. Ut feugiat est elit, faucibus feugiat purus malesuada at. Nulla pharetra aliquam nisi congue egestas. Praesent vestibulum egestas erat at placerat. Aenean eget nisi dictum, sodales metus in, luctus orci. Vestibulum id viverra augue. Quisque dictum elementum ex eu fermentum.
				</div>
			</iris-panel>
		</iris-dashboard-column>
		<iris-dashboard-splitter></iris-dashboard-splitter>
		<iris-dashboard-column style="width:276px;max-width:276px;min-width:276px;">
			<iris-panel class="iris-panel" caption="Login">
				<div class="content">
					Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec leo turpis, lacinia in velit non, lobortis ornare nunc. Proin ut blandit magna. Etiam consequat, sapien nec pharetra accumsan, sem est dictum augue, quis mollis nunc nibh vitae sapien. In commodo, urna a hendrerit efficitur, neque nibh commodo velit, tristique vulputate lectus ligula vitae metus. Vivamus congue feugiat metus, sed aliquam odio dapibus sit amet. Ut feugiat est elit, faucibus feugiat purus malesuada at. Nulla pharetra aliquam nisi congue egestas. Praesent vestibulum egestas erat at placerat. Aenean eget nisi dictum, sodales metus in, luctus orci. Vestibulum id viverra augue. Quisque dictum elementum ex eu fermentum.
				</div>
			</iris-panel>
			<iris-panel class="iris-panel" id="chatwindow" minheight="120" caption="CHAT">
				<div class="content">
					Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec leo turpis, lacinia in velit non, lobortis ornare nunc. Proin ut blandit magna. Etiam consequat, sapien nec pharetra accumsan, sem est dictum augue, quis mollis nunc nibh vitae sapien. In commodo, urna a hendrerit efficitur, neque nibh commodo velit, tristique vulputate lectus ligula vitae metus. Vivamus congue feugiat metus, sed aliquam odio dapibus sit amet. Ut feugiat est elit, faucibus feugiat purus malesuada at. Nulla pharetra aliquam nisi congue egestas. Praesent vestibulum egestas erat at placerat. Aenean eget nisi dictum, sodales metus in, luctus orci. Vestibulum id viverra augue. Quisque dictum elementum ex eu fermentum.
				</div>
			</iris-panel>
			<iris-panel class="iris-panel" caption="CONTROL FACTORY">
				<div class="content">
					<paper-button onclick="addNewPanel();" raised>Add Panel</paper-button>
				</div>
			</iris-panel>
			<iris-panel class="iris-panel">
				<div class="content">
					Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec leo turpis, lacinia in velit non, lobortis ornare nunc. Proin ut blandit magna. Etiam consequat, sapien nec pharetra accumsan, sem est dictum augue, quis mollis nunc nibh vitae sapien. In commodo, urna a hendrerit efficitur, neque nibh commodo velit, tristique vulputate lectus ligula vitae metus. Vivamus congue feugiat metus, sed aliquam odio dapibus sit amet. Ut feugiat est elit, faucibus feugiat purus malesuada at. Nulla pharetra aliquam nisi congue egestas. Praesent vestibulum egestas erat at placerat. Aenean eget nisi dictum, sodales metus in, luctus orci. Vestibulum id viverra augue. Quisque dictum elementum ex eu fermentum.
				</div>
			</iris-panel>
		</iris-dashboard-column>	
	</iris-dashboard-row>
</iris-dashboard>
<script>
var i = 0;
function addNewPanel(){
	var irisDashboard = $('iris-dashboard');
	if (!irisDashboard)
		return;
	i++;
	var p = irisDashboard[0].add(IRIS.createElement({
		tagName:"IRIS-PANEL",
		attributes:{
			caption:"Panel - "+i,
			height: 200
		},
		items:[{
			tagName:"div",
			attributes:{
				class:"content"
			}
		}]
	}))
	var c = p.querySelector("#content").querySelector(".content");
	c.innerHTML = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec leo turpis, lacinia in velit non, lobortis ornare nunc. Proin ut blandit magna. Etiam consequat, sapien nec pharetra accumsan, sem est dictum augue, quis mollis nunc nibh vitae sapien. In commodo, urna a hendrerit efficitur, neque nibh commodo velit, tristique vulputate lectus ligula vitae metus. Vivamus congue feugiat metus, sed aliquam odio dapibus sit amet. Ut feugiat est elit, faucibus feugiat purus malesuada at. Nulla pharetra aliquam nisi congue egestas. Praesent vestibulum egestas erat at placerat. Aenean eget nisi dictum, sodales metus in, luctus orci. Vestibulum id viverra augue. Quisque dictum elementum ex eu fermentum.";
}

/*
function MenuCallback(panel){
	console.log('on chat menu click')
	panel.menuitems = [{"value": "Hello", "key":"h"}];

	setTimeout(function(){
		alert('MenuCallback: showMenuDropdown')
		panel.showMenuDropdown();
	}, 1000);
	return false;
}

function RegisterCallback(){
	document.getElementById('chatwindow').registerMenuCallback(MenuCallback);
}

function UnregisterCallback(){
	document.getElementById('chatwindow').unregisterMenuCallback(MenuCallback);
	// and/or remove menues
	document.getElementById('chatwindow').menuitems = [];
}
$(window).on('polymer-ready', function(e) {
	// how it should be used / what we need /
	//alert('polymer-ready')
	if (!window.BRT) {
		return
	};
});
*/
</script>
</body>
</html>
